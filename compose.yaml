
# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
# version: '1.0'
# services:
#   postgres:
#     image: postgres:14.5-alpine
#     container_name: postgres
#   server:
#     build:
#       context: .
#     # ports:
#       # - 8000:8000
#     restart: always
#     environment:
#       - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
#       - POSTGRES_USER=${DATABASE_USERNAME}
#       - POSTGRES_DB=${DATABASE_NAME}
#     expose:
#       - 5432
#     env_file:
#       - ./.env 
#     volumes:
#       - "./db:/var/lib/postgresql/data"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 5s
#       timeout: 5s
#       retries: 5
#     command: ["postgres", "-c", "log_statement=all"]


# version: '3'

# services:
#   db:
#     image: postgres:alpine:3.18
#     environment:
#       # POSTGRES_USER: your_username
#       # POSTGRES_PASSWORD: your_password
#       - POSTGRES_PASSWORD=Donalaska020
#       - POSTGRES_USER=postgres
#       - POSTGRES_DB=fastapi
#     volumes:
#       - "./db:/var/lib/postgresql/data"
#     ports:
#       - "5432:5432"
#     restart: always

  
   

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
# depends_on:
services:
  db:
    condition: service_healthy
    db:
      image: postgres
      restart: always
      user: postgres
      secrets:
        - db-password
      volumes:
        - db-data:/var/lib/postgresql/data
      environment:
        - POSTGRES_DB=fastapi
        - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      expose:
        - 5432
      healthcheck:
        test: [ "CMD", "pg_isready" ]
        interval: 10s
        timeout: 5s
        retries: 5
    volumes:
      db-data:
    secrets:
      db-password:
        file: db/password.txt